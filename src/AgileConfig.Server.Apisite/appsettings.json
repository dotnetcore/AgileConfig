{
  "urls": "http://*:5000",
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "System": "Warning",
      "Microsoft": "Warning"
    }
  },
  "otlp": {
    "instanceId": "", // if empty, will generate a new one
    "logs": {
      "protocol": "http", // http grpc
      "endpoint": ""
    },
    "traces": {
      "protocol": "http", // http grpc
      "endpoint": ""
    },
    "metrics": {
      "protocol": "http", // http grpc
      "endpoint": ""
    }
  },
  "alwaysTrustSsl": true, // If true, the server will ignore SSL errors.
  "serviceHealthCheckInterval": 15, // Interval for service health checks in seconds.
  "serviceUnhealthInterval": 60, // Threshold in seconds after which a non-responsive service is considered unhealthy (default 60).
  "removeServiceInterval": 0, // Remove a service if it has been unresponsive longer than this many seconds; <= 0 keeps the service. Default is 0.
  "pathBase": "", // When using reverse proxies, set this to the base path (must start with /xxx).
  "adminConsole": false,
  "saPassword": "", // Password for the super administrator account.
  "defaultApp": "", // Default application to create on every restart.
  "cluster": false, // Cluster mode: automatically join the node list on startup, discover container IP, default port 5000 (ideal for Docker Compose).
  "preview_mode": false,
  "db": {
    "provider": "", //sqlite,mysql,sqlserver,npgsql,oracle,mongodb
    "conn": "",
    "env": {
      "TEST": {
        "provider": "", //sqlite,mysql,sqlserver,npgsql,oracle
        "conn": ""
      },
      "STAGING": {
        "provider": "", //sqlite,mysql,sqlserver,npgsql,oracle
        "conn": ""
      },
      "PROD": {
        "provider": "", //sqlite,mysql,sqlserver,npgsql,oracle
        "conn": ""
      }
    }
  },
  "JwtSetting": {
    "SecurityKey": "", // Secret key for JWT tokens; configure here or via the JwtSetting:SecurityKey environment variable. If empty, the system generates one at startup and stores it in the database (for example: dfasf343453fsdfa,./,./sdfasf34r3hfhfdb).
    "Issuer": "agileconfig.admin", // Token issuer.
    "Audience": "agileconfig.admin", // Token audience.
    "ExpireSeconds": 86400 // Token expiration time in seconds.
  },

  "SSO": {
    "enabled": false, // Whether to enable SSO.
    "loginButtonText": "", // Custom text shown on the SSO button.
    "OIDC": {
      "clientId": "", // Application ID.
      "clientSecret": "", // Application secret.
      "redirectUri": "", // Callback URL after successful authorization from the OIDC server.
      "tokenEndpoint": "", // Token endpoint where the code is exchanged for a token.
      "tokenEndpointAuthMethod": "client_secret_post", // Authentication method for the token endpoint: client_secret_post, client_secret_basic, or none. Default is client_secret_post.
      "authorizationEndpoint": "", // OIDC server authorization URL.
      "userIdClaim": "sub", // Claim key for the user ID in the ID token.
      "userNameClaim": "name", // Claim key for the user name in the ID token.
      "scope": "openid profile" // Requested scopes.
    }
  }
}
